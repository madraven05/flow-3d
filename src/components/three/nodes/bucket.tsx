/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
Command: npx gltfjsx@6.5.2 scene.gltf -t -o bucket.tsx 
Author: Dailsave (https://sketchfab.com/sivkov_dimas)
License: SKETCHFAB Standard (https://sketchfab.com/licenses)
Source: https://sketchfab.com/3d-models/trash-bin-3822fafe7a0f4afa8ecbb0f28e69952a
Title: Trash-bin
*/

import * as THREE from 'three'
import React from 'react'
import { useGLTF } from '@react-three/drei'
import { GLTF } from 'three-stdlib'
import { Flow3DNode } from '../../models/node'
import withEditNodeOptions from '../../hocs/with-edit-node-options'

type GLTFResult = GLTF & {
  nodes: {
    musorka_Material_0: THREE.Mesh
  }
  materials: {
    Material: THREE.MeshStandardMaterial
  }
}

const Bucket: React.FC<Flow3DNode> = ({...props}) => {
  const { nodes, materials } = useGLTF('/bucket/scene.gltf') as GLTFResult
  return (
    <group {...props} dispose={null}>
      <group position={[0,-0.5, 0]} scale={0.01}>
        <mesh castShadow geometry={nodes.musorka_Material_0.geometry} material={new THREE.MeshPhongMaterial({color: "orange"})} position={[0, 36.07, 0]} rotation={[-Math.PI / 2, 0, 0]} scale={[20, 18, 37]} />
      </group>
    </group>
  )
}

useGLTF.preload('/bucket/scene.gltf')
export default withEditNodeOptions(Bucket)