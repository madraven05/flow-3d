/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
Command: npx gltfjsx@6.5.2 scene.gltf -t -o laptop.tsx 
Author: Aullwen (https://sketchfab.com/Aullwen)
License: CC-BY-4.0 (http://creativecommons.org/licenses/by/4.0/)
Source: https://sketchfab.com/3d-models/laptop-7d870e900889481395b4a575b9fa8c3e
Title: Laptop
*/

import * as THREE from "three";
import React from "react";
import { useGLTF } from "@react-three/drei";
import { GLTF } from "three-stdlib";
import { Flow3DNode } from "../../models/node";
import withEditNodeOptions from "../../hocs/with-edit-node-options";

type GLTFResult = GLTF & {
  nodes: {
    Frame_ComputerFrame_0: THREE.Mesh;
    Screen_ComputerScreen_0: THREE.Mesh;
  };
  materials: {
    ComputerFrame: THREE.MeshStandardMaterial;
    ComputerScreen: THREE.MeshStandardMaterial;
  };
};

const Laptop: React.FC<Flow3DNode> = ({
...props
}) => {
  const { nodes, materials } = useGLTF("/laptop/scene.gltf") as GLTFResult;
  return (
    <group {...props}>
      <group position={[0, -0.5, 0]} scale={0.05} dispose={null}>
        <mesh
          castShadow
          geometry={nodes.Frame_ComputerFrame_0.geometry}
          material={materials.ComputerFrame}
          position={[0, 0.976, 0]}
          rotation={[-Math.PI / 2, 0, 0]}
          scale={100}
        />
        <mesh
          castShadow
          geometry={nodes.Screen_ComputerScreen_0.geometry}
          material={materials.ComputerScreen}
          position={[0, 0.65, -10.3]}
          rotation={[Math.PI, 0, -Math.PI]}
          scale={[100, 100, 88.235]}
        />
      </group>
    </group>
  );
};

useGLTF.preload("/laptop/scene.gltf");

export default withEditNodeOptions(Laptop);
