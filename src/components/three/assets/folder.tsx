/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
Command: npx gltfjsx@6.5.2 folder.glb -t -o folder.tsx 
*/

import * as THREE from 'three'
import React from 'react'
import { useGLTF } from '@react-three/drei'
import { GLTF } from 'three-stdlib'

type GLTFResult = GLTF & {
  nodes: {
    Plane058: THREE.Mesh
    Plane059: THREE.Mesh
    Plane060: THREE.Mesh
    Cylinder060: THREE.Mesh
    Cylinder061: THREE.Mesh
    Cylinder059: THREE.Mesh
    Cylinder058: THREE.Mesh
    Cube003: THREE.Mesh
  }
  materials: {
    ['Material.093']: THREE.MeshStandardMaterial
    ['Material.094']: THREE.MeshStandardMaterial
    ['Material.092']: THREE.MeshStandardMaterial
    ['Material.091']: THREE.MeshStandardMaterial
  }
  // animations: GLTFAction[]
}

export function Folder(props: JSX.IntrinsicElements['group']) {
  const { nodes, materials } = useGLTF('/folder.glb') as GLTFResult
  return (
    <group scale={0.75} {...props} dispose={null}>
      <mesh geometry={nodes.Plane058.geometry} material={materials['Material.093']} position={[-0.29, 0.112, -0.105]} />
      <mesh geometry={nodes.Plane059.geometry} material={materials['Material.093']} position={[0.31, -0.135, 0.095]} />
      <mesh geometry={nodes.Plane060.geometry} material={materials['Material.094']} position={[-0.067, -0.663, 0]} />
      <mesh geometry={nodes.Cylinder060.geometry} material={materials['Material.092']} position={[1.05, 1.151, 0.171]} />
      <mesh geometry={nodes.Cylinder061.geometry} material={materials['Material.092']} position={[0.855, 1.46, 0.171]} />
      <mesh geometry={nodes.Cylinder059.geometry} material={materials['Material.091']} position={[1.019, 0.055, 0.517]} />
      <mesh geometry={nodes.Cylinder058.geometry} material={materials['Material.091']} position={[1.214, 0.364, 0.517]} />
      <mesh geometry={nodes.Cube003.geometry} material={materials['Material.093']} position={[-0.81, -1.668, 0.545]} />
    </group>
  )
}

useGLTF.preload('/folder.glb')
