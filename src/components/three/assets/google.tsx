/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
Command: npx gltfjsx@6.5.2 google.glb -t -o google.tsx 
*/

import * as THREE from 'three'
// import React from 'react'
import { useGLTF } from '@react-three/drei'
import { GLTF } from 'three-stdlib'

type GLTFResult = GLTF & {
  nodes: {
    Cube102: THREE.Mesh
    Cube046: THREE.Mesh
    Cylinder017: THREE.Mesh
    Cylinder018: THREE.Mesh
    Cylinder019: THREE.Mesh
    Cylinder020: THREE.Mesh
  }
  materials: {
    ['Material.030']: THREE.MeshStandardMaterial
    ['Material.014']: THREE.MeshStandardMaterial
    ['Material.037']: THREE.MeshStandardMaterial
    ['Material.034']: THREE.MeshStandardMaterial
    ['Material.035']: THREE.MeshStandardMaterial
    ['Material.036']: THREE.MeshStandardMaterial
  }
  // animations: GLTFAction[]
}

export function Google(props: JSX.IntrinsicElements['group']) {
  const { nodes, materials } = useGLTF('/google.glb') as GLTFResult
  return (
    <group position={[9,0,0]} scale={1.55} {...props} dispose={null}>
      <mesh geometry={nodes.Cylinder017.geometry} material={materials['Material.037']} position={[-5.701, -0.113, 0.906]} scale={0.699} />
      <mesh geometry={nodes.Cylinder018.geometry} material={materials['Material.034']} position={[-5.701, -0.113, 0.906]} scale={0.699} />
      <mesh geometry={nodes.Cylinder019.geometry} material={materials['Material.035']} position={[-5.701, -0.113, 0.906]} scale={0.699} />
      <mesh geometry={nodes.Cylinder020.geometry} material={materials['Material.036']} position={[-5.701, -0.113, 0.906]} scale={0.699} />
    </group>
  )
}

useGLTF.preload('/google.glb')
