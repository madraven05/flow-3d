/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
Command: npx gltfjsx@6.5.2 cloud.glb -t -o cloud.tsx 
*/

import * as THREE from 'three'
import React from 'react'
import { useGLTF } from '@react-three/drei'
import { GLTF } from 'three-stdlib'

type GLTFResult = GLTF & {
  nodes: {
    Cube: THREE.Mesh
    Cylinder001: THREE.Mesh
    Cylinder002: THREE.Mesh
    Cube001: THREE.Mesh
    Cylinder004: THREE.Mesh
    Cylinder005: THREE.Mesh
    Cube002: THREE.Mesh
    Mball004: THREE.Mesh
  }
  materials: {
    Material: THREE.MeshStandardMaterial
    ['Material.001']: THREE.MeshStandardMaterial
  }
  // animations: GLTFAction[]
}

export function Cloud(props: JSX.IntrinsicElements['group']) {
  const { nodes, materials } = useGLTF('/cloud.glb') as GLTFResult
  return (
    <group {...props} dispose={null}>
      <mesh geometry={nodes.Cube.geometry} material={materials.Material} position={[0.126, -1.045, 1.717]} scale={0.784} />
      <mesh geometry={nodes.Cylinder001.geometry} material={materials['Material.001']} position={[-0.643, -1.045, 1.82]} scale={0.784} />
      <mesh geometry={nodes.Cylinder002.geometry} material={materials['Material.001']} position={[0.609, -1.045, 1.916]} scale={0.784} />
      <mesh geometry={nodes.Cube001.geometry} material={materials.Material} position={[0.126, -2.137, 1.717]} scale={0.784} />
      <mesh geometry={nodes.Cylinder004.geometry} material={materials['Material.001']} position={[-0.643, -2.137, 1.82]} scale={0.784} />
      <mesh geometry={nodes.Cylinder005.geometry} material={materials['Material.001']} position={[0.609, -2.137, 1.916]} scale={0.784} />
      <mesh geometry={nodes.Cube002.geometry} material={materials['Material.001']} position={[0.126, -1.658, 1.717]} scale={0.784} />
      <mesh geometry={nodes.Mball004.geometry} material={materials['Material.001']} position={[-1.533, -0.915, -0.039]} scale={0.959} />
    </group>
  )
}

useGLTF.preload('/cloud.glb')
