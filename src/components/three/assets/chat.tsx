/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
Command: npx gltfjsx@6.5.2 chat.glb -t -o chat.tsx 
*/

import * as THREE from 'three'
// import React from 'react'
import { useGLTF } from '@react-three/drei'
import { GLTF } from 'three-stdlib'

type GLTFResult = GLTF & {
  nodes: {
    Cube: THREE.Mesh
    Cube001: THREE.Mesh
    Sphere002: THREE.Mesh
    Sphere001: THREE.Mesh
  }
  materials: {
    ['Material.002']: THREE.MeshStandardMaterial
    ['Material.003']: THREE.MeshStandardMaterial
    ['Material.032']: THREE.MeshStandardMaterial
  }
  // animations: GLTFAction[]
}

export function Chat(props: JSX.IntrinsicElements['group']) {
  const { nodes, materials } = useGLTF('/chat.glb') as GLTFResult
  return (
    <group {...props} dispose={null}>
      <mesh geometry={nodes.Cube.geometry} material={nodes.Cube.material} position={[-0.925, 3.498, -0.014]} scale={[1.755, 1, 0.219]} />
      <mesh geometry={nodes.Cube001.geometry} material={materials['Material.002']} position={[1.047, 1.101, -0.014]} rotation={[-Math.PI, 0, -Math.PI]} scale={[1.755, 1, 0.219]} />
      <mesh geometry={nodes.Sphere002.geometry} material={materials['Material.003']} position={[-1.825, 3.495, 0.14]} scale={[0.253, 0.253, 0.162]} />
      <mesh geometry={nodes.Sphere001.geometry} material={materials['Material.032']} position={[0.103, 1.074, 0.14]} scale={[0.253, 0.253, 0.162]} />
    </group>
  )
}

useGLTF.preload('/chat.glb')
