/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
Command: npx gltfjsx@6.5.2 microsoft.glb -t -o azure.tsx 
*/

import * as THREE from 'three'
// import React from 'react'
import { useGLTF } from '@react-three/drei'
import { GLTF } from 'three-stdlib'

type GLTFResult = GLTF & {
  nodes: {
    Cube001: THREE.Mesh
    Cube002: THREE.Mesh
    Cube003: THREE.Mesh
    Cube: THREE.Mesh
  }
  materials: {
    ['Material.008']: THREE.MeshStandardMaterial
  }
  // animations: GLTFAction[]
}

export function Azure(props: JSX.IntrinsicElements['group']) {
  const { nodes, materials } = useGLTF('/microsoft.glb') as GLTFResult
  return (
    <group scale={4} {...props} dispose={null}>
      <mesh geometry={nodes.Cube001.geometry} material={materials['Material.008']} position={[0.142, 0.151, -0.037]} rotation={[0.087, Math.PI / 9, 0]} />
      <mesh geometry={nodes.Cube002.geometry} material={materials['Material.008']} position={[-0.135, -0.152, 0.037]} rotation={[0.087, Math.PI / 9, 0]} />
      <mesh geometry={nodes.Cube003.geometry} material={materials['Material.008']} position={[0.142, -0.144, -0.063]} rotation={[0.087, Math.PI / 9, 0]} />
      <mesh geometry={nodes.Cube.geometry} material={materials['Material.008']} position={[-0.135, 0.142, 0.063]} rotation={[0.087, Math.PI / 9, 0]} />
    </group>
  )
}

useGLTF.preload('/microsoft.glb')
