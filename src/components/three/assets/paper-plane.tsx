/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
Command: npx gltfjsx@6.5.2 scene.gltf -t -o paper-plane.tsx 
Author: MasterOfGaming020 (https://sketchfab.com/MasterOfGaming020)
License: CC-BY-4.0 (http://creativecommons.org/licenses/by/4.0/)
Source: https://sketchfab.com/3d-models/paper-plane-6e9201cd4b614d879741ea79524c57c6
Title: Paper Plane
*/

import * as THREE from "three";
import React, { useEffect, useRef } from "react";
import { Line, useGLTF } from "@react-three/drei";
import { GLTF } from "three-stdlib";
import gsap from "gsap";

interface PaperPlaneProps {
  triggerAnimation?: boolean;
}

type GLTFResult = GLTF & {
  nodes: {
    Object_4: THREE.Mesh;
  };
  materials: {
    ["Scene_-_Root"]: THREE.MeshStandardMaterial;
  };
  animations: GLTFAction[];
};

export function PaperPlane(
  props: JSX.IntrinsicElements["group"] & PaperPlaneProps
) {
  const { nodes, materials } = useGLTF("/paper-plane/scene.gltf") as GLTFResult;
  const ref = useRef<THREE.Group>(null);
  return (
    <group ref={ref} {...props} dispose={null}>
      <mesh
        castShadow
        geometry={nodes.Object_4.geometry}
        material={materials["Scene_-_Root"]}
        rotation={[Math.PI / 2, 0, 0]}
      />
    </group>
  );
}

useGLTF.preload("/paper-plane/scene.gltf");
